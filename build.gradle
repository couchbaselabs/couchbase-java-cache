/*
 * Copyright (c) 2014 Couchbase, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'checkstyle'

group = 'com.couchbase.client'
description = 'Official Couchbase JCache Implementation'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

checkstyle {
    configFile = new File(rootDir, "checkstyle.xml")
    toolVersion = "6.0"
}

def getVersionName() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--always', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (e) {
        //in case git command is not accessible...
        //put the date in there to have at least a reference point
        return "unknown" + new Date().format("yyyyMMdd");
    }
}

ext {
    sdkVersion = '2.0.2'
    junitVersion = '4.11'
    cacheApiVersion = '1.0.0'

    gitVersion = getVersionName()
}

sourceSets {
    integration
}

configurations {
    integrationCompile.extendsFrom compile, testCompile
    integrationRuntime.extendsFrom runtime, testRuntime

    markdownDoclet
}


dependencies {
    compile group: 'com.couchbase.client', name: 'java-client', version: sdkVersion, changing: true
    compile group: 'javax.cache', name: 'cache-api', version: cacheApiVersion
    testCompile group: 'junit', name: 'junit', version: junitVersion

    integrationCompile sourceSets.main.output

    markdownDoclet 'ch.raffael.pegdown-doclet:pegdown-doclet:1.1.1'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = "1.6"
    targetCompatibility = "1.6"
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.integration.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    doLast {
        copy {
            from "docs"
            into "$buildDir/docs/javadoc"
        }
    }
}

javadoc.options {
    docletpath = configurations.markdownDoclet.files.asType(List)
    doclet = "ch.raffael.doclets.pegdown.PegdownDoclet"
    addStringOption("parse-timeout", "10")

    windowTitle = "Couchbase JCache"
    docTitle = "Couchbase JCache ($project.version)"
    bottom = "Copyright &copy; 2014 Couchbase, Inc."
    links = [
            "http://download.oracle.com/javase/6/docs/api/",
            "http://docs.couchbase.com/sdk-api/couchbase-java-client-" + sdkVersion
    ]
//    overview = "docs/teaser.html"
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    name 'Couchbase JCache Implementation'
    url 'http://couchbase.com'
    organization {
        name 'Couchbase, Inc.'
        url 'http://couchbase.com'
    }
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    scm {
        url 'https://github.com/couchbase/couchbase-java-cache'
        connection 'scm:git:git://github.com/couchbase/couchbase-java-cache'
        developerConnection 'scm:git:git://github.com/couchbase/couchbase-java-cache'
    }
    issueManagement {
        system "Couchbase JIRA"
        url "http://www.couchbase.com/issues/browse/JCBC"
    }
    developers {
        developer {
            id 'simonbasle'
            name 'Simon Baslé'
            email 'simon@couchbase.com'
        }
        developer {
            id 'daschl'
            name 'Michael Nitschinger'
            email 'michael.nitschinger@couchbase.com'
        }
    }
}

publishing  {
    publications {
        compile(MavenPublication) {
            from components.java
            artifactId = 'java-cache'

            artifact(javadocJar) {
                classifier = 'javadoc'
            }
            artifact(sourcesJar) {
                classifier = 'sources'
            }

            pom.withXml {
                def root = asNode()
                root.dependencies.'*'.findAll() {
                    it.scope*.value = 'compile'
                }
                // For some weird reason description does not work in pomConfig, so doing it manually here.
                root.appendNode('Official Couchbase JCache Implementation')
                root.children().last() + pomConfig
            }
        }
    }

    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

install {
    repositories.mavenInstaller {
        customizePom(pom)
    }
}

def customizePom(def pom) {
    pom.whenConfigured { generatedPom ->
        // eliminate test-scoped dependencies (no need in maven central poms)
        generatedPom.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // sort to make pom dependencies order consistent to ease comparison of older poms
        generatedPom.dependencies = generatedPom.dependencies.sort { dep ->
            "$dep.scope:$dep.groupId:$dep.artifactId"
        }

        // add all items necessary for maven central publication
        generatedPom.project {
            name = rootProject.name
            description = rootProject.description
            url = 'http://couchbase.com'
            organization {
                name = 'Couchbase, Inc.'
                url = 'http://couchbase.com'
            }
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url = 'https://github.com/couchbase/couchbase-java-cache'
                connection = 'scm:git:git://github.com/couchbase/couchbase-java-cache'
                developerConnection = 'scm:git:git://github.com/couchbase/couchbase-java-cache'
            }
            developers {
                developer {
                    id 'simonbasle'
                    name 'Simon Baslé'
                    email 'simon@couchbase.com'
                }
                developer {
                    id = 'daschl'
                    name = 'Michael Nitschinger'
                    email = 'michael.nitschinger@couchbase.com'
                }
            }
            issueManagement {
                system = "Couchbase JIRA"
                url = "http://www.couchbase.com/issues/browse/JCBC"
            }
        }
    }
}

jar.manifest.mainAttributes(
        'Implementation-Title': 'Couchbase JCache',
        'Implementation-Version': ext.gitVersion,
        'Implementation-Vendor': 'Couchbase, Inc.',
        'Specification-Title': 'com.couchbase.client.jcache',
        'Specification-Version': version,
        'Specification-Vendor': 'Couchbase, Inc.'
)

afterEvaluate {
    //resources in src/main/resources will have @tokens@ replaced
    configure(processResources) {
        filter(ReplaceTokens,
                tokens: [specVersion: version, implVersion: getVersionName()])
    }
}